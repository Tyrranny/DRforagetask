=begin
        This script will run tasks from Mags to train Trading.
        You need to define forage_container: in your YAML or item
        will default to backpack.
		To define an unknown forage target use the below example:
		When you see it declinea task, the script puts a message of the item in....
		Number is 10 and item is some chamomile.
		10 is how many you need, you dont need that to define the object, what you need is what comes after ITEM IS and before the period... here it is "some chamomile"
		"some chamomile" is the target in the definition, now you have to look up chamomile, and see what room to forage in to find it. that room numbver is the room part.
		finally the name is what you actually forage, so here it is chamomile. so our example we end up with....
		{"name" => "chamomile", "room" => "792", "target" => "some chamomile"}
		make sure to alphebetize it for ease of search, and always use a comma at the end except on the last one.
		IMPORTANT--If you notice a TARGET is not what is defined, DONT CHNGE THE EXISTING ONE... create a new entry with the different target. Example...
		{"name" => "chamomile", "room" => "792", "target" => "a chamomile"},
		{"name" => "chamomile", "room" => "792", "target" => "some chamomile"},
=end
 
custom_require.call(%w[drinfomon events common common-items dependency])
 
 
class Foragetask
  include DRC
  include DRCI
 
  def initialize
    settings = get_settings
    $forage_container = settings.forage_container
	$forage_items=[
	{"name" => "acorn", "room" => "792", "target" => "acorns"},
	{"name" => "blue flower", "room" => "792", "target" => "blue flowers"},
	{"name" => "branch", "room" => "792", "target" => "branches"},
	{"name" => "chamomile", "room" => "792", "target" => "some chamomile"},
	{"name" => "corn", "room" => "19343", "target" => "pieces of corn"},
	{"name" => "georin grass", "room" => "851", "target" => "georin grasses"},
	{"name" => "grass", "room" => "792", "target" => "grasses"},
	{"name" => "lavender", "room" => "792", "target" => "sprigs of lavender"},
	{"name" => "leaf", "room" => "792", "target" => "leaves"},
	{"name" => "limb", "room" => "792", "target" => "limbs"},
	{"name" => "limb", "room" => "792", "target" => "sticks, branches or limbs"},
	{"name" => "moss", "room" => "792", "target" => "some moss"},
	{"name" => "nemoih root", "room" => "792", "target" => "nemoih roots"},
	{"name" => "rock", "room" => "792", "target" => "rocks"},
	{"name" => "root", "room" => "792", "target" => "roots"},
	{"name" => "rose", "room" => "792", "target" => "roses"},
	{"name" => "rusty nail", "room" => "792", "target" => "rusty nails"},
	{"name" => "sap", "room" => "792", "target" => "bits of sap"},
	{"name" => "seolarn weed", "room" => "792", "target" => "seolarn weeds"},
	{"name" => "shark tooth", "room" => "712", "target" => "shark teeth"},
	{"name" => "shoe tack", "room" => "8263", "target" => "shoe tacks"},
	{"name" => "stem", "room" => "792", "target" => "stems"},
	{"name" => "stick", "room" => "792", "target" => "sticks"},
	{"name" => "strawberry", "room" => "792", "target" => "strawberries"},
	{"name" => "tree root", "room" => "792", "target" => "tree roots"},
	{"name" => "vine", "room" => "19343", "target" => "vines"},
	{"name" => "wild carrot", "room" => "792", "target" => "wild carrots"}
	]
    #go to Mags
    start_script('go2', ['954']); wait_while { running? 'go2' }
    gettask
  end
 
 
 
  def gettask
    case DRC.bput('ask mags for task', 'I need (\d+) (.+)\.  If you could', 'I am sorry, you must wait', 'You are already on a task')
    #lines = reget(2)
    #lines.each do |line|
      #case line
      when /I need (\d+) (.+)\.  If you could/
        number = Regexp.last_match(1).to_i
        item = Regexp.last_match(2)
        echo "Number is #{number} and item is #{item}."
        set_target(item, number)
      when /I am sorry, you must wait/
        do_wait
	  when /You are already on a task/
	    cancel_task
      #end
    end
  end
 
  def do_wait
    echo "pausing for mags to reset"
    sleep 35
    gettask
  end
 
  def cancel_task
    fput('ask mags for task cancel')
	sleep 1
	fput('ask mags for task cancel')
	do_wait
  end
  
  def bad_target
    start_script('go2', ['954']); wait_while { running? 'go2' }
	cancel_task
  end
  
  def decline
    fput('Decline Task')
    do_wait
  end 
 
  def set_target(target, number)
    hash=$forage_items.find {|x| x["target"] == target }
	  if hash
		item=hash["name"]
		room=hash["room"]
	    collect_item(item, number, room)
      else
	    puts "#{target} not found in database"
		decline
	  end
  end
 
  def givemags(item, number)
    start_script('go2', ['954']); wait_while { running? 'go2' }
    $i = 0
    $num=#number.to_i
    while $i < $num do
      fput("get #{item} from my #$forage_container")
      fput("Give #{item} to Mags")
      $i = $i + 1
    end
    if DRSkill.getxp('Trading') > 30
      exit
    else
      fput("sk trading")
      do_wait
    end
  end
 
  def collect_item(item, number, room)
    fput('Accept Task')
    if DRC.right_hand || DRC.left_hand
      fput('stow left')
      fput('stow right')
    end
    sleep 1
    $num = number.to_i
    start_script('go2', ["#{room}"]); wait_while { running? 'go2' }
    sleep 1
    $i=0
    echo "foraging for #{number} #{item}"
    while $i < $num do
      case DRC.bput("forage #{item}", 'You manage to find', 'You forage around and believe', 'You wander around', 'You really need to have at least one hand free')
      when /You manage to find/
        $i = $i + 1
        echo "Found #$i #{item} of #$num"
        waitrt
        fput("put #{item} in my #$forage_container")
	  when 'You forage around and believe', 'You wander around'
	    bad_target
	  when 'You really need to have at least one hand free'
	    fput("stow left")
		fput("stow right")
      end
    end
    givemags(item,number)
  end
  
end
 
Foragetask.new